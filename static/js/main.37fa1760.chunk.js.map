{"version":3,"sources":["Material_Table.js","App.js","index.js"],"names":["Material_Table","useState","tableData","setTableData","columns","title","field","filterPlaceholder","emptyValue","useEffect","fetch","then","res","json","className","data","editable","onRowAdd","newRow","Promise","resolve","reject","setTimeout","onRowUpdate","oldRow","updatedData","id","onRowDelete","selectedRow","splice","options","searchAutoFocus","filtering","pageSizeOptions","pageSize","paginationType","showFirstLastPageButtons","exportButton","exportAllData","exportFileName","addRowPosition","actionsColumnIndex","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQA0FeA,MAvFf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,CACd,CACEC,MAAO,OACPC,MAAO,OACPC,kBAAmB,iBACnBC,WAAY,kBAAM,wCAEpB,CACEH,MAAO,QACPC,MAAO,QACPC,kBAAmB,kBACnBC,WAAY,kBAAM,wCAEpB,CACEH,MAAO,WACPC,MAAO,WACPE,WAAY,kBAAM,uCAClBD,kBAAmB,sBAErB,CACEF,MAAO,QACPC,MAAO,QACPC,kBAAmB,kBACnBC,WAAY,kBAAM,wCAEpB,CACEH,MAAO,UACPC,MAAO,UACPC,kBAAmB,oBACnBC,WAAY,kBAAM,yCAUtB,OANAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAAST,EAAaS,QAC7B,IAGD,qBAAKE,UAAU,MAAf,SACE,cAAC,IAAD,CACEV,QAASA,EACTW,KAAMb,EACNG,MAAM,wBACNW,SAAU,CACRC,SAAU,SAACC,GAAD,OACR,IAAIC,SAAQ,SAACC,EAASC,GACpBlB,EAAa,GAAD,mBAAKD,GAAL,CAAgBgB,KAC5BI,YAAW,kBAAMF,MAAW,SAEhCG,YAAa,SAACL,EAAQM,GAAT,OACX,IAAIL,SAAQ,SAACC,EAASC,GACpB,IAAMI,EAAW,YAAOvB,GACxBuB,EAAYD,EAAOtB,UAAUwB,IAAMR,EACnCf,EAAasB,GACbH,YAAW,kBAAMF,MAAW,SAEhCO,YAAa,SAACC,GAAD,OACX,IAAIT,SAAQ,SAACC,EAASC,GACpB,IAAMI,EAAW,YAAOvB,GACxBuB,EAAYI,OAAOD,EAAY1B,UAAUwB,GAAI,GAC7CvB,EAAasB,GACbH,YAAW,kBAAMF,MAAW,UAGlCU,QAAS,CACPC,iBAAiB,EACjBC,WAAW,EACXC,gBAAiB,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,KACxCC,SAAU,GACVC,eAAgB,UAChBC,0BAA0B,EAC1BC,cAAc,EACdC,eAAe,EACfC,eAAgB,YAChBC,eAAgB,QAChBC,oBAAqB,QCxEhBC,MARf,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,cAAC,EAAD,OCDN6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.37fa1760.chunk.js","sourcesContent":["import MaterialTable from \"material-table\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Material_Table() {\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",\r\n      filterPlaceholder: \"Filter by name\",\r\n      emptyValue: () => <em>null</em>,\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      field: \"email\",\r\n      filterPlaceholder: \"Filter by email\",\r\n      emptyValue: () => <em>null</em>,\r\n    },\r\n    {\r\n      title: \"Username\",\r\n      field: \"username\",\r\n      emptyValue: () => <em>null</em>,\r\n      filterPlaceholder: \"Filter by username\",\r\n    },\r\n    {\r\n      title: \"Phone\",\r\n      field: \"phone\",\r\n      filterPlaceholder: \"Filter by phone\",\r\n      emptyValue: () => <em>null</em>,\r\n    },\r\n    {\r\n      title: \"Website\",\r\n      field: \"website\",\r\n      filterPlaceholder: \"Filter by website\",\r\n      emptyValue: () => <em>null</em>,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((res) => res.json())\r\n      .then((res) => setTableData(res));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <MaterialTable\r\n        columns={columns}\r\n        data={tableData}\r\n        title=\"Evaluation Assignment\"\r\n        editable={{\r\n          onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              setTableData([...tableData, newRow]);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n          onRowUpdate: (newRow, oldRow) =>\r\n            new Promise((resolve, reject) => {\r\n              const updatedData = [...tableData];\r\n              updatedData[oldRow.tableData.id] = newRow;\r\n              setTableData(updatedData);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n          onRowDelete: (selectedRow) =>\r\n            new Promise((resolve, reject) => {\r\n              const updatedData = [...tableData];\r\n              updatedData.splice(selectedRow.tableData.id, 1);\r\n              setTableData(updatedData);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n        }}\r\n        options={{\r\n          searchAutoFocus: true,\r\n          filtering: true,\r\n          pageSizeOptions: [2, 5, 10, 20, 25, 50, 100],\r\n          pageSize: 10,\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n          exportButton: true,\r\n          exportAllData: true,\r\n          exportFileName: \"TableData\",\r\n          addRowPosition: \"first\",\r\n          actionsColumnIndex: -1,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Material_Table;\r\n","import \"./App.css\";\nimport Material_Table from \"./Material_Table\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Material_Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}